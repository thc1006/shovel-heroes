# ==========================================
# Shovel Heroes - Backend Dockerfile
# Multi-stage build for optimized production image
# ==========================================

# Stage 1: Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY packages/backend/package*.json ./packages/backend/

# Install ALL dependencies (including devDependencies for build)
RUN npm ci --legacy-peer-deps --workspace packages/backend || \
    npm install --legacy-peer-deps --workspace packages/backend

# Copy source code
COPY packages/backend ./packages/backend

# Build TypeScript
WORKDIR /app/packages/backend
RUN npm run build

# Stage 2: Production stage
FROM node:20-alpine

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY packages/backend/package*.json ./packages/backend/

# Install production dependencies only
RUN npm ci --legacy-peer-deps --workspace packages/backend --omit=dev || \
    npm install --legacy-peer-deps --workspace packages/backend --omit=dev

# Copy built files from builder
COPY --from=builder /app/packages/backend/dist ./packages/backend/dist
COPY --from=builder /app/packages/backend/migrations ./packages/backend/migrations

# Set working directory to backend
WORKDIR /app/packages/backend

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD node -e "require('http').get('http://localhost:8787/healthz', (r) => process.exit(r.statusCode === 200 ? 0 : 1))" || exit 1

EXPOSE 8787

CMD ["node", "dist/index.js"]
