/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/healthz": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Health check
         * @description 檢查系統與資料庫健康狀態
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description System is healthy */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {string} */
                            status?: "ok" | "degraded";
                            /** @enum {string} */
                            db?: "ok" | "fail";
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Register new user
         * @description 註冊新使用者 (志工/災民使用電話, 管理員使用電子郵件)
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["RegisterRequest"];
                };
            };
            responses: {
                /** @description Registration successful */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: uuid */
                            userId?: string;
                            role?: components["schemas"]["UserRole"];
                            message?: string;
                        };
                    };
                };
                400: components["responses"]["ValidationError"];
                /** @description User already exists */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * User login
         * @description 使用電話+OTP 或電子郵件+密碼登入
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["LoginRequest"];
                };
            };
            responses: {
                /** @description Login successful */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AuthTokens"];
                    };
                };
                /** @description Invalid credentials or OTP */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description Account locked due to failed attempts */
                423: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * User logout
         * @description 登出並撤銷 session
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        token: string;
                    };
                };
            };
            responses: {
                /** @description Logged out successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Refresh access token
         * @description 使用 refresh token 更新 access token
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        refresh_token: string;
                    };
                };
            };
            responses: {
                /** @description Token refreshed */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            accessToken?: string;
                            refreshToken?: string;
                        };
                    };
                };
                /** @description Invalid or expired refresh token */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/request-otp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Request OTP
         * @description 請求發送 OTP 至電話號碼
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        phone_number: string;
                        /** @enum {string} */
                        purpose: "login" | "phone_verification";
                    };
                };
            };
            responses: {
                /** @description OTP sent successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/verify-otp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Verify OTP
         * @description 驗證 OTP 碼
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        phone_number: string;
                        otp: string;
                        /** @enum {string} */
                        purpose: "login" | "phone_verification";
                    };
                };
            };
            responses: {
                /** @description OTP verification result */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            valid?: boolean;
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all users
         * @description 取得所有使用者清單 (含篩選與分頁), 需要 coordinator 以上權限
         */
        get: {
            parameters: {
                query?: {
                    page?: number;
                    limit?: number;
                    role?: components["schemas"]["UserRole"];
                    status?: components["schemas"]["UserStatus"];
                    search?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Users list with pagination */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            users?: {
                                /** Format: uuid */
                                user_id?: string;
                                role?: components["schemas"]["UserRole"];
                                email?: string;
                                phone_number?: string;
                                status?: components["schemas"]["UserStatus"];
                                created_at?: components["schemas"]["Timestamp"];
                            }[];
                            pagination?: {
                                page?: number;
                                limit?: number;
                                total?: number;
                                totalPages?: number;
                            };
                        };
                    };
                };
                401: components["responses"]["Unauthorized"];
                /** @description Insufficient permissions */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/users/{user_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get user details
         * @description 取得使用者詳細資訊
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    user_id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description User details */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                404: components["responses"]["NotFound"];
            };
        };
        put?: never;
        post?: never;
        /**
         * Delete user (soft delete)
         * @description 軟刪除使用者 (僅 super_admin)
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    user_id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description User deleted */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                401: components["responses"]["Unauthorized"];
                /** @description Requires super_admin role */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                404: components["responses"]["NotFound"];
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/users/{user_id}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Update user status
         * @description 更新使用者狀態 (suspend/activate)
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    user_id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        status: components["schemas"]["UserStatus"];
                        reason?: string;
                    };
                };
            };
            responses: {
                /** @description Status updated */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                401: components["responses"]["Unauthorized"];
                404: components["responses"]["NotFound"];
            };
        };
        trace?: never;
    };
    "/admin/verify-victim": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Verify victim identity
         * @description 驗證災民身份與狀態
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: uuid */
                        user_id: string;
                        /** @enum {string} */
                        action: "approve" | "reject" | "need_more_info";
                        notes?: string;
                    };
                };
            };
            responses: {
                /** @description Verification processed */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description User is not a victim */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                404: components["responses"]["NotFound"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/audit-logs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get audit logs
         * @description 取得稽核日誌 (含篩選)
         */
        get: {
            parameters: {
                query?: {
                    page?: number;
                    limit?: number;
                    user_id?: string;
                    action?: string;
                    start_date?: string;
                    end_date?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Audit logs with pagination */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            logs?: components["schemas"]["AuditLog"][];
                            pagination?: Record<string, never>;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/audit-logs/export": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Export audit logs as CSV
         * @description 匯出稽核日誌為 CSV 檔案
         */
        get: {
            parameters: {
                query?: {
                    start_date?: string;
                    end_date?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description CSV file */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/csv": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get dashboard statistics
         * @description 取得管理後台統計資料
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Dashboard statistics */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            users?: {
                                total?: number;
                                byRole?: {
                                    role?: components["schemas"]["UserRole"];
                                    count?: number;
                                }[];
                                byStatus?: {
                                    status?: components["schemas"]["UserStatus"];
                                    count?: number;
                                }[];
                                activeVolunteers?: number;
                                pendingVerifications?: number;
                                recentSignups?: number;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/recent-activity": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get recent activity feed
         * @description 取得最近的活動記錄
         */
        get: {
            parameters: {
                query?: {
                    limit?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Recent activities */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/disaster-areas": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List disaster areas
         * @description 取得所有災區清單 (含中心座標) 。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 單頁筆數 (預設 50, 上限 200) */
                    limit?: components["parameters"]["PageLimit"];
                    /** @description 起始位移 (用於分頁) */
                    offset?: components["parameters"]["PageOffset"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DisasterArea"][];
                    };
                };
                500: components["responses"]["InternalError"];
            };
        };
        put?: never;
        /**
         * Create disaster area
         * @description 新增一筆災區資料。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DisasterArea"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                400: components["responses"]["ValidationError"];
                401: components["responses"]["Unauthorized"];
                500: components["responses"]["InternalError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/disaster-areas/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get disaster area
         * @description 依 ID 取得單一災區。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: components["schemas"]["ID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DisasterArea"];
                    };
                };
                404: components["responses"]["NotFound"];
                500: components["responses"]["InternalError"];
            };
        };
        /**
         * Update disaster area
         * @description 更新災區內容。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: components["schemas"]["ID"];
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DisasterArea"];
                };
            };
            responses: {
                /** @description Updated */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                400: components["responses"]["ValidationError"];
                401: components["responses"]["Unauthorized"];
                404: components["responses"]["NotFound"];
                500: components["responses"]["InternalError"];
            };
        };
        post?: never;
        /**
         * Delete disaster area
         * @description 刪除指定災區 (需權限)。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: components["schemas"]["ID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Deleted */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                401: components["responses"]["Unauthorized"];
                404: components["responses"]["NotFound"];
                500: components["responses"]["InternalError"];
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/grids": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List grids
         * @description 取得全部網格 (可依災區篩選)。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 篩選指定災區的網格 */
                    area_id?: string;
                    /** @description 單頁筆數 (預設 50, 上限 200) */
                    limit?: components["parameters"]["PageLimit"];
                    /** @description 起始位移 (用於分頁) */
                    offset?: components["parameters"]["PageOffset"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Grid"][];
                    };
                };
                500: components["responses"]["InternalError"];
            };
        };
        put?: never;
        /**
         * Create grid
         * @description 建立新的救援 / 資源網格。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["Grid"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                400: components["responses"]["ValidationError"];
                401: components["responses"]["Unauthorized"];
                500: components["responses"]["InternalError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/grids/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get grid
         * @description 依 ID 取得單一網格詳情。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: components["schemas"]["ID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Grid"];
                    };
                };
                404: components["responses"]["NotFound"];
                500: components["responses"]["InternalError"];
            };
        };
        /**
         * Update grid
         * @description 更新網格資料 (含需求/狀態)。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: components["schemas"]["ID"];
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["Grid"];
                };
            };
            responses: {
                /** @description Updated */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                400: components["responses"]["ValidationError"];
                401: components["responses"]["Unauthorized"];
                404: components["responses"]["NotFound"];
                500: components["responses"]["InternalError"];
            };
        };
        post?: never;
        /**
         * Delete grid
         * @description 刪除網格 (通常僅管理員使用)。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: components["schemas"]["ID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Deleted */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                401: components["responses"]["Unauthorized"];
                404: components["responses"]["NotFound"];
                500: components["responses"]["InternalError"];
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/volunteer-registrations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List volunteer registrations
         * @description 取得所有志工報名紀錄 (未加分頁僅示範)。
         */
        get: {
            parameters: {
                query?: {
                    /** @description 單頁筆數 (預設 50, 上限 200) */
                    limit?: components["parameters"]["PageLimit"];
                    /** @description 起始位移 (用於分頁) */
                    offset?: components["parameters"]["PageOffset"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["VolunteerRegistration"][];
                    };
                };
                500: components["responses"]["InternalError"];
            };
        };
        put?: never;
        /**
         * Register volunteer
         * @description 志工報名參與指定網格。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["VolunteerRegistration"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                400: components["responses"]["ValidationError"];
                401: components["responses"]["Unauthorized"];
                500: components["responses"]["InternalError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/volunteer-registrations/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update volunteer registration status
         * @description 更新志工報名狀態 (使用者只能更新自己的報名或管理員可更新任何報名)。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: components["schemas"]["ID"];
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        status: components["schemas"]["VolunteerStatus"];
                    };
                };
            };
            responses: {
                /** @description Updated */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["VolunteerRegistration"];
                    };
                };
                400: components["responses"]["ValidationError"];
                401: components["responses"]["Unauthorized"];
                404: components["responses"]["NotFound"];
                500: components["responses"]["InternalError"];
            };
        };
        post?: never;
        /**
         * Cancel volunteer registration
         * @description 取消指定志工報名。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: components["schemas"]["ID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Deleted */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                401: components["responses"]["Unauthorized"];
                404: components["responses"]["NotFound"];
                500: components["responses"]["InternalError"];
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/supply-donations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List supply donations
         * @description 取得物資捐贈紀錄清單。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SupplyDonation"][];
                    };
                };
                500: components["responses"]["InternalError"];
            };
        };
        put?: never;
        /**
         * Create supply donation
         * @description 建立一筆捐贈物資紀錄。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["SupplyDonation"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                400: components["responses"]["ValidationError"];
                401: components["responses"]["Unauthorized"];
                500: components["responses"]["InternalError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/supply-donations/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update supply donation
         * @description 更新物資捐贈紀錄 (狀態、數量、備註)。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: components["schemas"]["ID"];
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @enum {string} */
                        status?: "pending" | "confirmed" | "delivered";
                        quantity?: number;
                        notes?: string;
                    };
                };
            };
            responses: {
                /** @description Updated */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SupplyDonation"];
                    };
                };
                400: components["responses"]["ValidationError"];
                401: components["responses"]["Unauthorized"];
                404: components["responses"]["NotFound"];
                500: components["responses"]["InternalError"];
            };
        };
        post?: never;
        /**
         * Delete supply donation
         * @description 刪除物資捐贈紀錄。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: components["schemas"]["ID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Deleted */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                401: components["responses"]["Unauthorized"];
                404: components["responses"]["NotFound"];
                500: components["responses"]["InternalError"];
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/grid-discussions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List grid discussions
         * @description 取得全部網格的留言 (建議未來加入過濾)。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GridDiscussion"][];
                    };
                };
                500: components["responses"]["InternalError"];
            };
        };
        put?: never;
        /**
         * Post discussion message
         * @description 在指定網格張貼留言。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["GridDiscussion"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                400: components["responses"]["ValidationError"];
                401: components["responses"]["Unauthorized"];
                500: components["responses"]["InternalError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/announcements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List announcements
         * @description 取得公告列表 (可依時間排序)。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Announcement"][];
                    };
                };
                500: components["responses"]["InternalError"];
            };
        };
        put?: never;
        /**
         * Create announcement
         * @description 建立一則公告。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["Announcement"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                400: components["responses"]["ValidationError"];
                401: components["responses"]["Unauthorized"];
                500: components["responses"]["InternalError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/announcements/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update announcement
         * @description 更新公告內容。
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: components["schemas"]["ID"];
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        title?: string;
                        content?: string;
                        /** @enum {string} */
                        priority?: "low" | "normal" | "high" | "urgent";
                        published?: boolean;
                    };
                };
            };
            responses: {
                /** @description Updated */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Announcement"];
                    };
                };
                400: components["responses"]["ValidationError"];
                401: components["responses"]["Unauthorized"];
                404: components["responses"]["NotFound"];
                500: components["responses"]["InternalError"];
            };
        };
        post?: never;
        /**
         * Delete announcement
         * @description 刪除公告。
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: components["schemas"]["ID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Deleted */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                401: components["responses"]["Unauthorized"];
                404: components["responses"]["NotFound"];
                500: components["responses"]["InternalError"];
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/volunteers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List volunteers
         * @description 取得志工報名清單（整合報名與使用者呈現所需欄位）。
         *     回傳封裝含 `data` 與 `can_view_phone` 供前端判斷是否顯示電話。
         *     欄位 `created_date` 目前沿用前端既有命名；若要統一建議改為 `created_at` 並同步前端。
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description 過濾指定網格的志工 */
                    grid_id?: components["schemas"]["ID"];
                    /** @description 過濾指定狀態 */
                    status?: components["schemas"]["VolunteerStatus"];
                    /** @description 是否回傳狀態統計 `status_counts` */
                    include_counts?: boolean;
                    /** @description 單頁筆數 (預設 50, 上限 200) */
                    limit?: components["parameters"]["PageLimit"];
                    /** @description 起始位移 (用於分頁) */
                    offset?: components["parameters"]["PageOffset"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["VolunteersListResponse"];
                    };
                };
                500: components["responses"]["InternalError"];
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List users
         * @description 取得使用者列表 (需權限)。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["User"][];
                    };
                };
                401: components["responses"]["Unauthorized"];
                500: components["responses"]["InternalError"];
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get current user
         * @description 回傳目前登入的使用者資訊。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["User"];
                    };
                };
                401: components["responses"]["Unauthorized"];
                500: components["responses"]["InternalError"];
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/functions/fix-grid-bounds": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Normalize / repair stored grid bounds
         * @description 批次修正網格邊界 (僅管理維運)。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Done */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                401: components["responses"]["Unauthorized"];
                500: components["responses"]["InternalError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/functions/export-grids-csv": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Export grids as CSV
         * @description 匯出所有網格資料為 CSV 檔。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description CSV content */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/csv": string;
                    };
                };
                500: components["responses"]["InternalError"];
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/functions/import-grids-csv": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Import grids from CSV content
         * @description 從 CSV 內容匯入 / 更新網格。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        csv: string;
                    };
                };
            };
            responses: {
                /** @description Import result */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                400: components["responses"]["ValidationError"];
                500: components["responses"]["InternalError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/functions/grid-template": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Download blank grid template CSV
         * @description 下載空白網格匯入範本。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description CSV */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                500: components["responses"]["InternalError"];
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/functions/external-grid-api": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Proxy / external grid API call
         * @description 代理對外部網格系統的呼叫。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": Record<string, never>;
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                400: components["responses"]["ValidationError"];
                500: components["responses"]["InternalError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/functions/external-volunteer-api": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Proxy / external volunteer API call
         * @description 代理對外部志工系統的呼叫。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": Record<string, never>;
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                400: components["responses"]["ValidationError"];
                500: components["responses"]["InternalError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v2/sync": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Sync legacy data (v2)
         * @description 與舊版系統同步資料 (可能為非同步背景作業)。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Sync started */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                500: components["responses"]["InternalError"];
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v2/roster": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get roster (v2)
         * @description 取得舊系統格式之 roster 資料。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                500: components["responses"]["InternalError"];
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * @description 唯一識別字串 (UUID、ULID 或資料庫主鍵)
         * @example grid_01HZYQ9W123ABCDEF
         */
        ID: string;
        /**
         * Format: date-time
         * @description ISO 8601 時間戳記 (UTC)
         * @example 2025-10-02T08:12:30Z
         */
        Timestamp: string;
        DisasterArea: {
            id: components["schemas"]["ID"];
            /**
             * @description 災區名稱
             * @example 光復鄉重災區
             */
            name: string;
            /**
             * Format: double
             * @description 災區中心點緯度
             * @example 23.8751
             */
            center_lat: number;
            /**
             * Format: double
             * @description 災區中心點經度
             * @example 121.578
             */
            center_lng: number;
            created_at?: components["schemas"]["Timestamp"];
            updated_at?: components["schemas"]["Timestamp"];
        };
        SupplyNeed: {
            /**
             * @description 需求物資名稱
             * @example 鋤頭
             */
            name: string;
            /**
             * @description 需求總數量
             * @example 20
             */
            quantity: number;
            /**
             * @description 數量單位
             * @example 支
             */
            unit: string;
            /**
             * @description 已收到的數量
             * @default 0
             * @example 5
             */
            received: number;
        };
        Grid: {
            id: components["schemas"]["ID"];
            /**
             * @description 網格代碼 (在災區中應唯一)
             * @example A-3
             */
            code: string;
            /**
             * @description 網格類型 (決定使用情境)
             * @example manpower
             * @enum {string}
             */
            grid_type: "mud_disposal" | "manpower" | "supply_storage" | "accommodation" | "food_area";
            disaster_area_id: components["schemas"]["ID"];
            /**
             * @description 需要志工數量 (僅 manpower 類型有意義)
             * @default 0
             * @example 10
             */
            volunteer_needed: number;
            /**
             * @description 已報名志工數量
             * @default 0
             * @example 4
             */
            volunteer_registered: number;
            /**
             * @description 集合地點描述
             * @example 光復國小正門
             */
            meeting_point?: string | null;
            /**
             * @description 風險或安全注意事項
             * @example 地面濕滑，注意積水與電線
             */
            risks_notes?: string | null;
            /**
             * @description 格主或聯絡人資訊 (手機/Line)
             * @example 0912-345-678
             */
            contact_info?: string | null;
            /**
             * Format: double
             * @description 中心點緯度
             * @example 23.87525
             */
            center_lat: number;
            /**
             * Format: double
             * @description 中心點經度
             * @example 121.57812
             */
            center_lng: number;
            /** @description 粗略網格邊界 (地圖顯示用) */
            bounds: {
                /** @example 23.876 */
                north: number;
                /** @example 23.874 */
                south: number;
                /** @example 121.579 */
                east: number;
                /** @example 121.577 */
                west: number;
            };
            /**
             * @description 網格狀態
             * @default open
             * @example open
             * @enum {string}
             */
            status: "open" | "closed" | "completed" | "pending";
            /**
             * @description 所需物資列表
             * @example [
             *       {
             *         "name": "鋤頭",
             *         "quantity": 20,
             *         "unit": "支",
             *         "received": 5
             *       },
             *       {
             *         "name": "工作用手套",
             *         "quantity": 50,
             *         "unit": "副",
             *         "received": 10
             *       }
             *     ]
             */
            supplies_needed?: components["schemas"]["SupplyNeed"][];
            grid_manager_id?: components["schemas"]["ID"];
            created_at?: components["schemas"]["Timestamp"];
            updated_at?: components["schemas"]["Timestamp"];
        };
        VolunteerRegistration: {
            id: components["schemas"]["ID"];
            grid_id: components["schemas"]["ID"];
            user_id: components["schemas"]["ID"];
            created_at?: components["schemas"]["Timestamp"];
        };
        SupplyDonation: {
            id: components["schemas"]["ID"];
            grid_id: components["schemas"]["ID"];
            /**
             * @description 捐贈物資名稱
             * @example 礦泉水
             */
            name: string;
            /**
             * @description 捐贈數量
             * @example 100
             */
            quantity: number;
            /**
             * @description 單位
             * @example 箱
             */
            unit: string;
            /**
             * @description 捐贈者聯絡方式
             * @example water-donor@example.com
             */
            donor_contact?: string;
            created_at?: components["schemas"]["Timestamp"];
        };
        GridDiscussion: {
            id: components["schemas"]["ID"];
            grid_id: components["schemas"]["ID"];
            user_id: components["schemas"]["ID"];
            /**
             * @description 留言內容
             * @example 今天下午 2 點再集中一次清運。
             */
            content: string;
            created_at?: components["schemas"]["Timestamp"];
        };
        Announcement: {
            id: components["schemas"]["ID"];
            /**
             * @description 公告標題
             * @example 10/3 志工集合時間調整
             */
            title: string;
            /**
             * @description 公告內容 (Markdown 可選)
             * @example 明日集合時間改為 **08:30**，請提早 10 分鐘報到。
             */
            body: string;
            created_at?: components["schemas"]["Timestamp"];
        };
        User: {
            id: components["schemas"]["ID"];
            /**
             * @description 使用者顯示名稱
             * @example 林志工
             */
            name?: string;
            /**
             * Format: email
             * @description 使用者電子郵件
             * @example volunteer@example.org
             */
            email?: string;
        };
        /**
         * @description 志工報名狀態
         * @example pending
         * @enum {string}
         */
        VolunteerStatus: "pending" | "confirmed" | "arrived" | "completed" | "cancelled";
        /** @description 志工報名清單中每一筆資料 (結合報名 + 呈現所需欄位) */
        VolunteerListItem: {
            id: components["schemas"]["ID"];
            grid_id: components["schemas"]["ID"];
            user_id: components["schemas"]["ID"];
            /**
             * @description 志工顯示名稱 (可能從使用者或表單輸入取得)
             * @example 張小強
             */
            volunteer_name: string;
            /**
             * @description 志工電話號碼；若 `can_view_phone=false` 時後端可直接省略或回傳遮蔽版本
             * @example 0912-345-678
             */
            volunteer_phone?: string | null;
            status: components["schemas"]["VolunteerStatus"];
            /**
             * @description 可服務時間文字描述
             * @example 10/3 上午或 10/4 全天
             */
            available_time?: string | null;
            /**
             * @description 自述技能 (字串列表)
             * @example [
             *       "挖土機",
             *       "醫療志工"
             *     ]
             */
            skills?: string[];
            /**
             * @description 可攜帶工具 (字串列表)
             * @example [
             *       "鐵鏟",
             *       "手推車"
             *     ]
             */
            equipment?: string[];
            /**
             * @description 其他備註
             * @example 需要協助調度交通
             */
            notes?: string | null;
            /**
             * Format: date-time
             * @description 報名建立時間 (命名沿用前端使用字段; 與其他資源的 created_at 不同)
             * @example 2025-10-02T08:12:30Z
             */
            created_date: string;
        };
        /** @description 志工清單回應外層封裝 */
        VolunteersListResponse: {
            /** @description 志工報名資料陣列 */
            data: components["schemas"]["VolunteerListItem"][];
            /**
             * @description 是否允許前端顯示 `volunteer_phone`；由後端依角色授權判斷
             * @example true
             */
            can_view_phone: boolean;
            /**
             * @description 總筆數 (分頁時可用)
             * @example 128
             */
            total?: number;
            /** @description 各狀態統計 (若 `include_counts=true` 或後端預設回傳) */
            status_counts?: {
                /** @example 12 */
                pending?: number;
                /** @example 34 */
                confirmed?: number;
                /** @example 8 */
                arrived?: number;
                /** @example 55 */
                completed?: number;
                /** @example 19 */
                cancelled?: number;
            };
            /**
             * @description 目前頁碼 (可選, 若採用 page 模式)
             * @example 1
             */
            page?: number;
            /**
             * @description 單頁筆數 (對應查詢參數)
             * @example 50
             */
            limit?: number;
        };
        Error: {
            /**
             * @description 錯誤訊息
             * @example 未授權的請求
             */
            message: string;
            /**
             * @description 內部錯誤代碼 (可選)
             * @example AUTH_REQUIRED
             */
            code?: string;
        };
        /**
         * @description 使用者角色
         * @enum {string}
         */
        UserRole: "volunteer" | "victim" | "ngo_coordinator" | "regional_admin" | "data_analyst" | "super_admin";
        /**
         * @description 使用者狀態
         * @enum {string}
         */
        UserStatus: "active" | "suspended" | "pending_verification" | "inactive";
        RegisterRequest: {
            /** @description 電話號碼 (志工/災民) */
            phone_number?: string;
            /**
             * Format: email
             * @description 電子郵件 (管理員)
             */
            email?: string;
            /** @description 密碼 (管理員必填) */
            password?: string;
            role: components["schemas"]["UserRole"];
            /** @description 全名 */
            full_name: string;
            /** @description 緊急聯絡人 */
            emergency_contact?: string;
        };
        LoginRequest: {
            /** @description 電話號碼 (OTP 登入) */
            phone_number?: string;
            /** @description OTP 驗證碼 */
            otp?: string;
            /**
             * Format: email
             * @description 電子郵件 (密碼登入)
             */
            email?: string;
            /** @description 密碼 */
            password?: string;
        };
        AuthTokens: {
            /** @description JWT 存取權杖 (24小時有效) */
            accessToken: string;
            /** @description JWT 更新權杖 (7天有效) */
            refreshToken: string;
            user: {
                /** Format: uuid */
                id?: string;
                role?: components["schemas"]["UserRole"];
                email?: string;
                phone_number?: string;
            };
        };
        AuditLog: {
            /** Format: uuid */
            id: string;
            /** Format: uuid */
            user_id?: string;
            user_role?: components["schemas"]["UserRole"];
            /**
             * @description 操作類型
             * @example UPDATE_USER_STATUS
             */
            action: string;
            /**
             * @description 資源類型
             * @example users
             */
            resource_type?: string;
            /** @description 資源 ID */
            resource_id?: string | null;
            ip_address?: string | null;
            user_agent?: string | null;
            request_data?: Record<string, never> | null;
            old_value?: Record<string, never> | null;
            new_value?: Record<string, never> | null;
            created_at: components["schemas"]["Timestamp"];
        };
    };
    responses: {
        /** @description 未授權 (需要 Bearer Token) */
        Unauthorized: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description 找不到資源 */
        NotFound: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description 請求參數或內容驗證失敗 */
        ValidationError: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description 伺服器內部錯誤 */
        InternalError: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Error"];
            };
        };
    };
    parameters: {
        /** @description 單頁筆數 (預設 50, 上限 200) */
        PageLimit: number;
        /** @description 起始位移 (用於分頁) */
        PageOffset: number;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
